<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookshop.mappers.admin">

	<!-- "주문" 20개씩 : 주문번호 / 책id / 책 제목 / 작가 / 가격 / 수량 -->
	<select id="getOrderListSeparate" parameterType="hashmap" resultType="OrderPlus">
		SELECT C.order_num, C.book_id, D.book_title, D.book_writer, D.book_price, C.book_cnt
		FROM (
			SELECT A.order_num AS 'order_num', B.user_id AS 'user_id', A.book_id AS 'book_id', A.book_cnt AS 'book_cnt', B.order_status AS 'order_status'
			FROM ORDERLIST A, ORDERS B
			WHERE A.order_num = B.order_num
			AND A.order_num IN (
				SELECT C.order_num FROM (
					SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, E.*
					FROM (SELECT @ROWNUM := 0) D, ORDERS E ORDER BY E.order_num DESC) C
				WHERE ROWNUM BETWEEN #{start} AND #{end}
			)
		) C, BOOK D
		WHERE C.book_id = D.book_id	
		ORDER BY C.order_num DESC
	</select>
	
	<!-- "주문" 20개씩 : 주문번호 / 회원id / 주문 상태 -->
	<select id="getOrderListUnited" parameterType="hashmap" resultType="OrderPlus">
		SELECT DISTINCT(C.order_num), C.user_id, C.order_status, COUNT(C.order_num) AS cnt
		FROM (
			SELECT A.order_num AS 'order_num', B.user_id AS 'user_id', A.book_id AS 'book_id', A.book_cnt AS 'book_cnt', B.order_status AS 'order_status' 
			FROM ORDERLIST A, ORDERS B
			WHERE A.order_num = B.order_num
			AND A.order_num IN (
				SELECT C.order_num FROM (
					SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, E.*
					FROM (SELECT @ROWNUM := 0) D, ORDERS E ORDER BY E.order_num DESC) C
				WHERE ROWNUM BETWEEN #{start} AND #{end}
			)
		) C, BOOK D
		WHERE C.book_id = D.book_id   
		GROUP BY C.order_num
		ORDER BY C.order_num DESC
	</select>
   
	<!-- 페이징 -->
	<select id="getNextPageOrders" resultType="Orders">
		SELECT A.*
		FROM (SELECT @ROWNUM := @ROWNUM + 1 AS rownum, O.*
			FROM (SELECT @ROWNUM := 0) R,
			(SELECT *
			FROM ORDERS
			ORDER BY order_num DESC) O) A
		WHERE rownum = #{pageNumber}
	</select>
	
	<!-- 페이징 -->
	<select id="getNextPageBook" resultType="Book">
		SELECT A.*
		FROM (SELECT @ROWNUM := @ROWNUM + 1 AS rownum, O.*
			FROM (SELECT @ROWNUM := 0) R,
			(SELECT *
			FROM BOOK) O) A
		WHERE rownum = #{pageNumber}
	</select>
	
	<!-- 주문 상태 변경 -->
	<update id="changeStatus">
		UPDATE ORDERS
		SET order_status = #{order_status}
		WHERE order_num = #{order_num}
	</update>

	<insert id="addDelivery" parameterType="hashmap">
		INSERT DELIVERY
		VALUES (#{order_num}, #{tracking_num})
	</insert>
	
	<!-- 주문상태별 주문 개수 -->
	<select id="getOrderCnt" resultType="_int">
		SELECT COUNT(*)
		FROM ORDERS
		WHERE order_status = #{order_status}
	</select>
	
	<!-- 총 주문 개수 -->
	<select id="getTotCnt" resultType="_int">
		SELECT COUNT(*)
		FROM ORDERS
	</select>
	
	<!-- 책 20개 리스트 -->
	<select id="getBookList" resultType="Book">
		SELECT *
		FROM BOOK
		WHERE available = 0
		LIMIT #{start}, 20
	</select>
	
	<!-- 책 삭제 -->
	<update id="deleteBook">
		UPDATE BOOK
		SET available = 1
		WHERE book_id = #{book_id}
	</update>
	
	<!-- 책 입력 -->
	<insert id="addBook">
		INSERT INTO BOOK
		VALUES (#{book_id}, #{book_title}, #{book_writer}, #{book_pub}, #{book_date}, #{book_price}, #{book_genre}, 0, CONCAT(#{book_id}, '.jpg'), #{book_intro}, #{book_contents}, 0)
	</insert>
	
	<!-- 문의 불러오기 -->
	<select id="getAdminAskList" resultType="AskList">	
	SELECT e.ask_id, e.book_title, e.ask_sort, e.ask_date, e.book_cover, e.askreply_count, e.writer, e.askreply_id, f.user_admin 
	FROM   (SELECT c.ask_id, c.book_title, c.ask_sort, c.ask_date, c.book_cover, c.askreply_count, c.writer, d.writer AS reply_writer, d.askreply_id 
				FROM (SELECT a.ask_id, book_title, ask_sort, ask_date, book_cover, askreply_count, writer
					  FROM ASK a, BOOK b
					  WHERE a.book_id = b.book_id
					  AND a.available = 0) c
				LEFT JOIN ASKREPLY d ON c.ask_id = d.ask_id
    			WHERE askreply_id IN 
    				(SELECT MAX(askreply_id) 
    				 FROM ASKREPLY GROUP BY ask_id) 
    		OR c.askreply_count = 0) e, USERS f
	WHERE e.reply_writer = f.user_id;
	</select>
	
	<!-- 댓글 마지막 답글자 불러오기 
	<select id="getLastReplyWriter"  resultType="_int">
		SELECT a.user_admin 
		FROM USERS a, ASKREPLY b 
		WHERE b.ask_id = #{ask_id} 
		AND b.writer = a.user_id
		ORDER BY askreply_id DESC 
		LIMIT 1
	</select> -->

</mapper>