<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookshop.mappers.book">

	<!-- 전체 책 개수 -->
	<select id="getBookCnt" resultType="_int">
		SELECT COUNT(*)
		FROM book
		WHERE available = 0
	</select>
	
	<!-- 소설 책 개수 -->
	<select id="getBookCntNovel" resultType="_int">
		SELECT COUNT(*)
		FROM book
		WHERE book_genre = '소설'
		AND available = 0
	</select>
	
	<!-- 시/에세이 책 개수 -->
	<select id="getBookCntPoem" resultType="_int">
		SELECT COUNT(*)
		FROM book
		WHERE book_genre = '시_에세이'
		AND available = 0
	</select>
	
	<!-- 여행 책 개수 -->
	<select id="getBookCntTravel" resultType="_int">
		SELECT COUNT(*)
		FROM book
		WHERE book_genre = '여행'
		AND available = 0
	</select>
	
	<!-- 판매량 순으로 16개  -->
	<select id="getBookListSell" resultType="Book">
		SELECT *
		FROM book
		WHERE available = 0
		ORDER BY book_sell_tot DESC
		LIMIT #{start}, 16
	</select>
	
	<!-- 신규출간 순으로 16개  -->
	<select id="getBookListNew" resultType="Book">
		SELECT *
		FROM book
		WHERE available = 0
		ORDER BY book_date DESC
		LIMIT #{start}, 16
	</select>
	
	<!-- 리뷰 순으로 16개  -->
	<select id="getBookListReview" resultType="Book">
		SELECT A.book_id, A.book_title, A.book_cover, A.book_price
		FROM book A LEFT JOIN review B 
		ON A.book_id = B.book_id
		WHERE A.available = 0 
		GROUP BY A.book_id 
		ORDER BY COUNT(B.review_id) DESC 
		LIMIT #{start}, 16
	</select>
	
	<!-- 장르별 판매량 순으로 16개 (1) -->
	<select id="getBookListNovel" resultType="Book">
		SELECT * 
		FROM book
		WHERE book_genre = '소설' AND available = 0
		ORDER BY book_sell_tot DESC
		LIMIT #{start}, 16
	</select>
	
	<!-- 장르별 판매량 순으로 16개 (2) -->
	<select id="getBookListPoem" resultType="Book">
		SELECT * 
		FROM book
		WHERE book_genre = '시_에세이' AND available = 0
		ORDER BY book_sell_tot DESC
		LIMIT #{start}, 16
	</select>
	
	<!-- 장르별 판매량 순으로 16개 (3) -->
	<select id="getBookListTravel" resultType="Book">
		SELECT * 
		FROM book
		WHERE book_genre = '여행' AND available = 0
		ORDER BY book_sell_tot DESC
		LIMIT #{start}, 16
	</select>
	
	<!-- 키워드 검색 -->
	<select id="searchBook" parameterType="hashmap" resultType="Book">
		SELECT *
		FROM book
		WHERE (book_title LIKE CONCAT('%', #{keyword}, '%')
		OR book_writer LIKE CONCAT('%', #{keyword}, '%'))
		AND available = 0
		LIMIT #{start}, 16
	</select>
	
	<!-- 검색된 책 개수 -->
	<select id="getSearchBookCnt" resultType="_int">
		SELECT COUNT(*)
		FROM book
		WHERE (book_title LIKE CONCAT('%', #{keyword}, '%')
		OR book_writer LIKE CONCAT('%', #{keyword}, '%'))
		AND available = 0
	</select>
	
	<!-- 장르별 키워드 검색 -->
	<select id="searchGenreBook" parameterType="hashmap" resultType="Book">
		SELECT *
		FROM book
		WHERE (book_title LIKE CONCAT('%', #{keyword}, '%')
		OR book_writer LIKE CONCAT('%', #{keyword}, '%'))
		AND book_genre = #{book_genre}
		AND available = 0
		LIMIT #{start}, 16
	</select>
	
	<!-- 검색된 장르별 책 개수 -->
	<select id="getSearchGenreBookCnt" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM book
		WHERE (book_title LIKE CONCAT('%', #{keyword}, '%')
		OR book_writer LIKE CONCAT('%', #{keyword}, '%'))
		AND book_genre = #{book_genre}
		AND available = 0
	</select>
	
	<!-- 베스트 셀러 리스트 -->
	<select id="getBestSeller" resultType="string">
		SELECT C.book_id FROM (
			SELECT B.book_id
			FROM orders A, orderlist B
			WHERE A.order_num = B.order_num
			AND DATEDIFF(NOW(), A.order_date) <![CDATA[<=]]> 30
			GROUP BY B.book_id
			ORDER BY SUM(B.book_cnt) DESC
			LIMIT 0, 8
		) C, book D
		WHERE C.book_id = D.book_id
		AND D.available = 0
	</select>
	
	<!-- 초기 흥미 장르 -->
	<select id="getInitGenre" resultType="string">
		SELECT user_init_genre
		FROM users
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 리뷰 기반 추천 장르 -->
	<select id="getGenreRecomm" resultType="string">
		SELECT B.book_genre
		FROM review A, book B
		WHERE A.user_id = #{user_id}
		  AND A.book_id = B.book_id
		  AND A.review_score <![CDATA[>=]]> 3
		  AND B.available = 0
		GROUP BY B.book_genre
		ORDER BY COUNT(B.book_id) DESC
		LIMIT 1
	</select>
	<!-- 장르 상위 4개 -->
	<select id="getGenreRecommFour" resultType="Book">
		SELECT *
		FROM book
		WHERE book_genre = #{book_genre}
		AND available = 0
		ORDER BY RAND()
		LIMIT 4
	</select>
	
	<!-- 리뷰 기반 추천 작가 -->
	<select id="getWriterRecomm" resultType="string">
		SELECT B.book_writer
		FROM review A, book B
		WHERE A.user_id = #{user_id}
		  AND A.book_id = B.book_id
		  AND A.review_score <![CDATA[>=]]> 3
		  AND B.available = 0
		GROUP BY B.book_writer
		ORDER BY COUNT(B.book_id) DESC
		LIMIT 1
	</select>
	<!-- 작가 상위 2개 -->
	<select id="getWriterRecommTwo" resultType="Book">
		SELECT *
		FROM book
		WHERE book_writer = #{book_writer}
		AND available = 0
		ORDER BY RAND()
		LIMIT 2
	</select>
	
	<!-- 책 아이디로 책 가져오기 -->
	<select id="getBook" resultType="Book">
		SELECT *
		FROM book
		WHERE book_id = #{book_id}
	</select>
	
	<!-- 책 아이디로 리뷰 3개씩 -->
	<select id="getReview" resultType="Review">
		SELECT *
		FROM review
		WHERE book_id = #{book_id}
		ORDER BY review_date DESC
		LIMIT #{start}, 3
	</select>
	
	<!-- 특정 책의 리뷰 개수 -->
	<select id="getReviewCnt" resultType="_int">
		SELECT COUNT(*)
		FROM review
		WHERE book_id = #{book_id}
	</select>
	
	<!-- 특정 책의 리뷰 평균 평점  -->
   	<select id="getBookScore" resultType="_int">
   		SELECT AVG(review_score) * 10
      	FROM review
      	WHERE book_id = #{book_id}
   	</select>
   
 	<!-- 리뷰 추가 -->
   	<insert id="addReview">
      	INSERT INTO review (user_id, book_id, review_score, review_contents, review_date)
      	VALUES (#{user_id}, #{book_id}, #{review_score}, #{review_contents}, NOW())
   	</insert>
	
</mapper>